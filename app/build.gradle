plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.huawei.agconnect'
    id 'com.google.secrets_gradle_plugin' version '0.5'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    compileSdkVersion 32
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "it.antonino.palco"
        minSdkVersion 26
        targetSdkVersion 32
        versionCode 1
        versionName "2.1"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "config", "version"

    productFlavors {

        huawei {
            dimension "config"
        }

        google {
            dimension "config"
        }

        free {
            versionCode 1
            dimension "version"
            versionNameSuffix "-free"
            buildConfigField "boolean", "BUY_TICKET", "false"
        }

        paid {
            versionCode 1
            dimension "version"
            versionNameSuffix "-paid"
            buildConfigField "boolean", "BUY_TICKET", "true"
        }

    }

    sourceSets {

        googleFree {
            java.srcDirs = ['src/google/java','src/free/java']
            res.srcDirs = ['src/main/res','src/free/res']
            manifest.srcFile 'src/google/AndroidManifest.xml'
        }

        googlePaid {
            java.srcDirs = ['src/google/java','src/paid/java']
            res.srcDirs = ['src/main/res','src/paid/res']
            manifest.srcFile 'src/google/AndroidManifest.xml'
        }

        huaweiFree {
            java.srcDirs = ['src/huawei/java','src/free/java']
            res.srcDirs = ['src/main/res','src/free/res']
            manifest.srcFile 'src/huawei/AndroidManifest.xml'
        }

        huaweiPaid {
            java.srcDirs = ['src/huawei/java','src/paid/java']
            res.srcDirs = ['src/main/res','src/paid/res']
            manifest.srcFile 'src/huawei/AndroidManifest.xml'
        }

    }

    buildTypes.each {
        it.buildConfigField('String', 'BASE_URL', properties.get("baseUrl"))
        it.buildConfigField('String', 'DISCOGS_API_KEY', properties.get("dicogsApiKey"))
        it.buildConfigField('String', 'DISCOGS_SECRET', properties.get("discogsSecret"))
        it.buildConfigField('String', 'UNSPLASH_ACCESS_KEY', properties.get("unsplashAccessKey"))
        it.buildConfigField('String', 'UNSPLASH_SECRET_KEY', properties.get("unsplashSecretKey"))
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude("kotlin/reflect/*")
        exclude("META-INF/*")
        exclude("kotlin/coroutines/*")
        exclude("kotlin/internal/*")
        exclude("kotlin/kotlin.kotlin_builtins")
        exclude("kotlin/ranges/*")
        exclude("kotlin/collections/*")
        exclude("kotlin/annotation/*")
    }

}

configurations {
    detekt
}
// Detekt
def detektTask = tasks.register("detekt", JavaExec) {
    main = "io.gitlab.arturbosch.detekt.cli.Main"
    classpath = configurations.detekt

    def input = "$projectDir"
    def config = "$projectDir/detekt.yml"
    def exclude = ".*/build/.*,.*/resources/.*"
    def params = [ '-i', input, '-c', config, '-ex', exclude]

    args(params)
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'io.gitlab.arturbosch.detekt:detekt-cli:1.22.0-RC1'
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.fragment:fragment-ktx:1.3.4'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'org.koin:koin-core:2.1.6'
    implementation 'org.koin:koin-androidx-viewmodel:2.1.6'
    implementation 'com.squareup.retrofit2:retrofit:2.8.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.8.1'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'com.github.sundeepk:compact-calendar-view:3.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'
    implementation 'com.airbnb.android:lottie:3.0.7'
    implementation 'com.github.tarek360.RichPath:animator:0.1.1'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'com.github.unsplash:unsplash-photopicker-android:1.0.1'
    implementation 'androidx.multidex:multidex:2.0.1'
    googleImplementation 'com.google.android.gms:play-services-maps:17.0.1'
    googleImplementation platform('com.google.firebase:firebase-bom:26.8.0')
    googleImplementation 'com.google.firebase:firebase-analytics'
    googleImplementation 'com.google.firebase:firebase-crashlytics-ktx'
    googleImplementation 'com.google.firebase:firebase-messaging-ktx'
    googleImplementation 'com.google.firebase:firebase-messaging-directboot:23.0.2'
    googleImplementation 'com.google.android.gms:play-services-auth:19.0.0'
    huaweiImplementation 'com.facebook.android:facebook-android-sdk:4.42.0'
    huaweiImplementation 'com.huawei.agconnect:agconnect-core:1.5.2.300'
    huaweiImplementation 'com.huawei.hms:push:5.0.2.301'
    huaweiImplementation 'com.huawei.hms:location:3.0.3.300'
    huaweiImplementation 'com.huawei.hms:maps:4.0.0.302'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}

check.dependsOn detektTask

secrets {
    // To add your Maps API key to this project:
    // 1. Open the root project's local.properties file
    // 2. Add this line, where YOUR_API_KEY is your API key:
    //        MAPS_API_KEY=YOUR_API_KEY
    defaultPropertiesFileName 'local.properties'
}